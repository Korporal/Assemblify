There's a lot of fidddly details to be borne in mind when designing something like Assemblify.

Signed Assemblies
=================
Every assembly has a set of references to other asssemblies, if any of these referenced assemblies were signed (when everything was built) then the key info is also stored.

This allows the runtime to pinpoint precisely that assembly.

Auto Reference
==============

If I have a project and use Assemblify to add a ref to some assembly, then we want to automatically add references to ...

Add Reference
=============
Dont add a ref in asm .net_version X to another asm of .net_version > X these are incompatible.

Project assembly references
===========================

It seems that the references that appear in a new project are not actually needed (they seem to be some basic assumed set). Furthermore the references that we see
in a project in VS do not appear in the compiled assemblies list (referenced assemblies). Of course many even simple programs may end up using stuff within the basic set and then they will appear.

Only the assemblies ACTUALLY directly rerenced by generated code will appears in the referenced assemblies array.

Probing
=======

We need to probe using a set of rules, here they are:

1. Does the exact required DLL exist, if so use that.
2. Do versions of the required DLL exits even if not same FW?
   If so return highest FW version that's lower than the ref FW version


